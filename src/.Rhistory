
rm(list=ls(all=TRUE))
.help.ESS <- help

setwd("/home/michio/02_work/2013_Generalized Reduced Clustering/prog")


library(MASS)
library(mclust)
library(grc)
source("GenData.R")
source("GRCCV.R")
source("to_csv.R")


set.seed(1)
dat <- GenData(data.type="test", N.var1=10, N.var2=0, N.var3=0, N.sub.tmp=100, n.overlap=1)
X <- dat$X; A.t <- dat$A; B.t <- dat$B; F.t <- dat$F; U.t <- dat$U; cluster.t <- dat$cluster
X <- scale(X, scale=TRUE)

ret <- GRC(X, 2, 0, 4, 1, 0, 100, 100, TRUE, 100, 1e-05, 7)


rm(list=ls(all=TRUE))
.help.ESS <- help

setwd("/home/michio/02_work/2013_Generalized Reduced Clustering/prog")


library(MASS)
library(mclust)
library(grc)
source("GenData.R")
source("GRCCV.R")
source("to_csv.R")


set.seed(1)
dat <- GenData(data.type="test", N.var1=10, N.var2=0, N.var3=0, N.sub.tmp=100, n.overlap=1)
X <- dat$X; A.t <- dat$A; B.t <- dat$B; F.t <- dat$F; U.t <- dat$U; cluster.t <- dat$cluster
X <- scale(X, scale=TRUE)

ret <- GRC(X, 2, 0, 4, 1, 0, 100, 100, TRUE, 100, 1e-05, 7)

set.seed(1)
dat <- GenData(data.type="test", N.var1=10, N.var2=0, N.var3=0, N.sub.tmp=1000, n.overlap=1)
X <- dat$X; A.t <- dat$A; B.t <- dat$B; F.t <- dat$F; U.t <- dat$U; cluster.t <- dat$cluster
X <- scale(X, scale=TRUE)

ret <- GRC(X, 2, 0, 4, 1, 0, 1, 100, TRUE, 100, 1e-05, 7)

rm(list=ls(all=TRUE))
.help.ESS <- help

setwd("/home/michio/02_work/2013_Generalized Reduced Clustering/prog")


library(MASS)
library(mclust)
library(grc)
source("GenData.R")
source("GRCCV.R")
source("to_csv.R")


set.seed(1)
dat <- GenData(data.type="test", N.var1=10, N.var2=0, N.var3=0, N.sub.tmp=1000, n.overlap=1)
X <- dat$X; A.t <- dat$A; B.t <- dat$B; F.t <- dat$F; U.t <- dat$U; cluster.t <- dat$cluster
X <- scale(X, scale=TRUE)

ret <- GRC(X, 2, 0, 4, 1, 0, 1, 100, TRUE, 100, 1e-05, 7)

rm(list=ls(all=TRUE))
.help.ESS <- help

setwd("/home/michio/02_work/2013_Generalized Reduced Clustering/prog")


library(MASS)
library(mclust)
library(grc)
source("GenData.R")
source("GRCCV.R")
source("to_csv.R")


set.seed(1)
dat <- GenData(data.type="test", N.var1=10, N.var2=0, N.var3=0, N.sub.tmp=1000, n.overlap=1)
X <- dat$X; A.t <- dat$A; B.t <- dat$B; F.t <- dat$F; U.t <- dat$U; cluster.t <- dat$cluster
X <- scale(X, scale=TRUE)

ret <- GRC(X, 2, 0, 4, 1, 0, 1, 100, TRUE, 100, 1e-05, 7)

##¡ù¡ú¡ù¡ú¡ù¡ú¡ù¡ú¡ù¡ú¡ù¡ú¡ù¡ú¡ù¡ú¡ù¡ú¡ù¡ú¡ù¡ú¡ù¡ú¡ù¡ú¡ù¡ú¡ù¡ú

##¸Å¤¤objects¤Î¾Ãµî
rm(list=ls(all=TRUE))
.help.ESS <- help
setwd("/home/michio/02_work/2013_Functional GRC/prog")


##### °ÍÂ¸´Ø¿ô #####
library(fgrc)
library(grc) ##FGRCCV¤ÎÃæ¤Ç¤ÏGRC¤ò»È¤Ã¤Æ¤¤¤ë
library(mclust) ##´Ø¿ôadjustedRandIndex¤ò»ÈÍÑ¤¹¤ë¤¿¤á
library(ggplot2)
library(GPArotation) ##²óÅ¾¤ò»È¤Ã¤Æ¤ß¤¿¤¤¤Î¤Ç
source("Plot.R")
source("GGPlot.R")
source("CalcGCV.R")
source("to_csv.R")
source("/home/michio/02_work/2013_Generalized Reduced Clustering/prog/GRCLossFunc.R")
source("/home/michio/02_work/2013_Generalized Reduced Clustering/prog/WarmStart.R")
source("/home/michio/02_work/2013_Generalized Reduced Clustering/prog/GRCCV_WS.R")
source("/home/michio/02_work/2013_Generalized Reduced Clustering/prog/eValue.R")
source("/home/michio/02_work/2013_Generalized Reduced Clustering/prog/pF.R")
source("../working_directory/141127_revision_CV_test/func/SimData.R")
source("../working_directory/141127_revision_CV_test/func/FGRCCV.R")
source("../working_directory/141127_revision_CV_test/func/ModifiedCalcpF.R")

##¥Ñ¥é¥á¡¼¥¿¤Î¸õÊä¤òÀßÄê¤¹¤ë
N.comp1.vec <- c(1, 2, 3, 4)
N.comp2.vec <- c(0, 2, 4)
N.clust.vec <- c(2, 3, 4, 5)
by.rho1 <- 0.5
by.rho2 <- 0.5
rho1.vec <- seq(-2, 2, by=by.rho1)
rho2.vec <- seq(-3, 1, by=by.rho2)
## N.comp1.vec <- c(1, 2)
## N.comp2.vec <- c(0, 2)
## N.clust.vec <- c(2, 3)
## by.rho1 <- 1
## by.rho2 <- 1
## rho1.vec <- seq(1, 2, by=by.rho1)
## rho2.vec <- seq(0, 1, by=by.rho2)
par.mat <- expand.grid(N.comp1=N.comp1.vec, N.comp2=N.comp2.vec, N.clust=N.clust.vec)
par.mat <- subset(par.mat, N.comp1 < N.clust)
N.par.mat <- dim(par.mat)[1]
rownames(par.mat) <- c(1:N.par.mat)
rho.set.temp <- expand.grid(rho1=rho1.vec, rho2=rho2.vec)
rho.set <- subset(rho.set.temp, rho1 > rho2)
N.rho.set <- dim(rho.set)[1]
rownames(rho.set) <- c(1:dim(rho.set)[1])

##N.comp1¤ÈN.clust¤ÎÁÈ¤ß¹ç¤ï¤»
par.mat <- expand.grid(N.comp1=N.comp1.vec, N.clust=N.clust.vec)
par.mat <- subset(par.mat, N.comp1 < N.clust)
N.par.mat <- dim(par.mat)[1]
rownames(par.mat) <- c(1:N.par.mat)

RankIsFull <- TRUE
RankIsFull2 <- TRUE
N.sub <- 300
NIV <- 0
save.location <- "/home/michio/02_work/2013_Functional GRC/working_directory/141127_revision_CV_test/out/"
save(file=paste(save.location, "ret.cv.list_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
save(file=paste(save.location, "ret.list_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
save(file=paste(save.location, "within.var_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
save(file=paste(save.location, "X_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))

save.location <- "/home/michio/02_work/2013_Functional GRC/working_directory/141127_revision_CV_test/out/"
load(file=paste(save.location, "ret.cv.list_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
load(file=paste(save.location, "ret.list_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
load(file=paste(save.location, "within.var_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
load(file=paste(save.location, "X_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))

paste(save.location, "ret.cv.list_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep="")
load(file=paste(save.location, "ret.cv.list_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))

load(file=paste(save.location, "ret.cv.list_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
objects()
RankIsFull <- TRUE
RankIsFull2 <- TRUE
N.sub <- 150
NIV <- 0
save.location <- "/home/michio/02_work/2013_Functional GRC/working_directory/141127_revision_CV_test/out/"
load(file=paste(save.location, "ret.cv.list_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
load(file=paste(save.location, "ret.list_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
load(file=paste(save.location, "within.var_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
load(file=paste(save.location, "X_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))

str(ret.cv.list)
RankIsFull <- TRUE
RankIsFull2 <- TRUE
N.sub <- 300
NIV <- 1
save.location <- "/home/michio/02_work/2013_Functional GRC/working_directory/141127_revision_CV_test/out/"
load(file=paste(save.location, "ret.cv.list_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
load(file=paste(save.location, "ret.list_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
load(file=paste(save.location, "within.var_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
load(file=paste(save.location, "X_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))

str(ret.cv.list)
within.var
par.mat
e.value <- eValue(X, par.mat, within.var)

e.value
ret.cv.list[[3]]


ret.cv.list[[1]]$v
ret.cv.list[[2]]$v
ret.cv.list[[3]]$v
rho.set
ret.cv.list[[3]]$min.theta
ret.cv.list[[3]]$mean.theta
n.par.mat <- 3

          N.comp1 <- par.mat[n.par.mat, 1]
          N.clust <- par.mat[n.par.mat, 2]
          N.comp2 <- ret.cv.list[[n.par.mat]]$v[2]


          rho1 <- ret.cv.list[[n.par.mat]]$v[4]
          rho2 <- ret.cv.list[[n.par.mat]]$v[5]
          

          cat("n.par.mat on (N.comp1, N.clust) :", n.par.mat, "\n")
          

          ret <- GRC(X, N.comp1, N.comp2, N.clust, rho1, rho2, 100, 100, TRUE, 100, 1e-05, NULL, 8)
  
ret$cluster
rho1
rho2
str(X)
N.comp1.vec <- c(1, 2, 3, 4)
N.comp2.vec <- c(0, 2, 4)
N.clust.vec <- c(2, 3, 4, 5)
by.rho1 <- 0.25
by.rho2 <- 0.25
rho1.vec <- seq(0, 2, by=by.rho1)
rho2.vec <- seq(-1, 1, by=by.rho2)
par.mat <- expand.grid(N.comp1=N.comp1.vec, N.comp2=N.comp2.vec, N.clust=N.clust.vec)
par.mat <- subset(par.mat, N.comp1 < N.clust)
N.par.mat <- dim(par.mat)[1]
rownames(par.mat) <- c(1:N.par.mat)
rho.set.temp <- expand.grid(rho1=rho1.vec, rho2=rho2.vec)
rho.set <- subset(rho.set.temp, rho1 > rho2)
N.rho.set <- dim(rho.set)[1]
rownames(rho.set) <- c(1:dim(rho.set)[1])
par.mat <- expand.grid(N.comp1=N.comp1.vec, N.clust=N.clust.vec)
par.mat <- subset(par.mat, N.comp1 < N.clust)
N.par.mat <- dim(par.mat)[1]
rownames(par.mat) <- c(1:N.par.mat)

rho.set
N.comp1.vec <- c(1, 2, 3, 4)
N.comp2.vec <- c(0, 2, 4)
N.clust.vec <- c(2, 3, 4, 5)
by.rho1 <- 0.25
by.rho2 <- 0.25
rho1.vec <- seq(-2, 2, by=by.rho1)
rho2.vec <- seq(-3, 1, by=by.rho2)
par.mat <- expand.grid(N.comp1=N.comp1.vec, N.comp2=N.comp2.vec, N.clust=N.clust.vec)
par.mat <- subset(par.mat, N.comp1 < N.clust)
N.par.mat <- dim(par.mat)[1]
rownames(par.mat) <- c(1:N.par.mat)
rho.set.temp <- expand.grid(rho1=rho1.vec, rho2=rho2.vec)
rho.set <- subset(rho.set.temp, rho1 > rho2)
N.rho.set <- dim(rho.set)[1]
rownames(rho.set) <- c(1:dim(rho.set)[1])
par.mat <- expand.grid(N.comp1=N.comp1.vec, N.clust=N.clust.vec)
par.mat <- subset(par.mat, N.comp1 < N.clust)
N.par.mat <- dim(par.mat)[1]
rownames(par.mat) <- c(1:N.par.mat)

rho.set
N.comp1.vec <- c(1, 2, 3, 4)
N.comp2.vec <- c(0, 2, 4)
N.clust.vec <- c(2, 3, 4, 5)
by.rho1 <- 0.25
by.rho2 <- 0.25
rho1.vec <- seq(1, 2, by=by.rho1)
rho2.vec <- seq(-3, 1, by=by.rho2)
par.mat <- expand.grid(N.comp1=N.comp1.vec, N.comp2=N.comp2.vec, N.clust=N.clust.vec)
par.mat <- subset(par.mat, N.comp1 < N.clust)
N.par.mat <- dim(par.mat)[1]
rownames(par.mat) <- c(1:N.par.mat)
rho.set.temp <- expand.grid(rho1=rho1.vec, rho2=rho2.vec)
rho.set <- subset(rho.set.temp, rho1 > rho2)
N.rho.set <- dim(rho.set)[1]
rownames(rho.set) <- c(1:dim(rho.set)[1])
par.mat <- expand.grid(N.comp1=N.comp1.vec, N.clust=N.clust.vec)
par.mat <- subset(par.mat, N.comp1 < N.clust)
N.par.mat <- dim(par.mat)[1]
rownames(par.mat) <- c(1:N.par.mat)


rho.set
rm(list=ls(all=TRUE))
.help.ESS <- help
setwd("/home/michio/02_work/2013_Functional GRC/prog")


##### °ÍÂ¸´Ø¿ô #####
library(fgrc)
library(grc) ##FGRCCV¤ÎÃæ¤Ç¤ÏGRC¤ò»È¤Ã¤Æ¤¤¤ë
library(mclust) ##´Ø¿ôadjustedRandIndex¤ò»ÈÍÑ¤¹¤ë¤¿¤á
library(ggplot2)
library(GPArotation) ##²óÅ¾¤ò»È¤Ã¤Æ¤ß¤¿¤¤¤Î¤Ç
source("Plot.R")
source("GGPlot.R")
source("CalcGCV.R")
source("to_csv.R")
source("/home/michio/02_work/2013_Generalized Reduced Clustering/prog/GRCLossFunc.R")
source("/home/michio/02_work/2013_Generalized Reduced Clustering/prog/WarmStart.R")
source("/home/michio/02_work/2013_Generalized Reduced Clustering/prog/GRCCV_WS.R")
source("/home/michio/02_work/2013_Generalized Reduced Clustering/prog/eValue.R")
source("/home/michio/02_work/2013_Generalized Reduced Clustering/prog/pF.R")
source("../working_directory/141127_revision_CV_test/func/SimData.R")
source("../working_directory/141127_revision_CV_test/func/FGRCCV.R")
source("../working_directory/141127_revision_CV_test/func/ModifiedCalcpF.R")



##¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û
##
## GRCCV.WS¤òÍøÍÑ¤·¤Æ(N.comp1, N.clust)°Ê³°¤òCV¤Çµá¤á¤ë
##
##¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û¡ü¡û
##¥Ñ¥é¥á¡¼¥¿¤Î¸õÊä¤òÀßÄê¤¹¤ë
N.comp1.vec <- c(1, 2, 3, 4)
N.comp2.vec <- c(0, 2, 4)
N.clust.vec <- c(2, 3, 4, 5)
by.rho1 <- 0.5
by.rho2 <- 0.5
rho1.vec <- seq(-2, 2, by=by.rho1)
rho2.vec <- seq(-3, 1, by=by.rho2)
## N.comp1.vec <- c(1, 2)
## N.comp2.vec <- c(0, 2)
## N.clust.vec <- c(2, 3)
## by.rho1 <- 1
## by.rho2 <- 1
## rho1.vec <- seq(1, 2, by=by.rho1)
## rho2.vec <- seq(0, 1, by=by.rho2)
par.mat <- expand.grid(N.comp1=N.comp1.vec, N.comp2=N.comp2.vec, N.clust=N.clust.vec)
par.mat <- subset(par.mat, N.comp1 < N.clust)
N.par.mat <- dim(par.mat)[1]
rownames(par.mat) <- c(1:N.par.mat)
rho.set.temp <- expand.grid(rho1=rho1.vec, rho2=rho2.vec)
rho.set <- subset(rho.set.temp, rho1 > rho2)
N.rho.set <- dim(rho.set)[1]
rownames(rho.set) <- c(1:dim(rho.set)[1])

##N.comp1¤ÈN.clust¤ÎÁÈ¤ß¹ç¤ï¤»
par.mat <- expand.grid(N.comp1=N.comp1.vec, N.clust=N.clust.vec)
par.mat <- subset(par.mat, N.comp1 < N.clust)
N.par.mat <- dim(par.mat)[1]
rownames(par.mat) <- c(1:N.par.mat)


N.par.mat
par.mat
RankIsFull <- TRUE
RankIsFull2 <- TRUE
N.sub <- 300
NIV <- 0
save.location <- "/home/michio/02_work/2013_Functional GRC/working_directory/141127_revision_CV_test/out/"
load(file=paste(save.location, "ret.cv.list_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
load(file=paste(save.location, "ret.list_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
load(file=paste(save.location, "within.var_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
load(file=paste(save.location, "X_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))

within.var
##e-value¤òµá¤á¤ë
e.value <- eValue(X, par.mat, within.var)

e.value
length(ret.cv.list)
par.mat
length(ret.cv.list[[3]])
rho.set
str(ret.cv.list[[3]])
length(ret.list)
par.mat
ret.list[[3]]$cluster
RankIsFull <- FALSE; RankIsFull2 <- TRUE; N.sub <- 150; NIV <- 0
set.seed(1)
dat <- SimData(RankIsFull, RankIsFull2, 0.0001, N.sub, NIV)
X <- dat$X; A.t <- dat$A; V <- dat$V; U.t <- dat$U; cluster.t <- dat$cluster
temp <- BasisExpand(X, "Bsp", c(8, 4), 0)
X <- temp$X.smooth
coef.arr <- temp$coef.arr
Phi <- temp$Phi
S <- temp$S
N.basis <- temp$N.basis
N.var <- 1 + NIV
K <- temp$K
H.mat <- temp$H.mat
Hat <- temp$Hat
temp2 <- eigen(H.mat, symmetric=TRUE)
H.half <- temp2$vectors %*% sqrt(diag(temp2$values)) %*% t(temp2$vectors)
H.half.inv <- solve(H.half)
N.var.basis <- N.var * N.basis
G.H.P <- NULL
for (n.var in 1:N.var)
  G.H.P <- cbind(G.H.P, coef.arr[,, n.var] %*% H.half)
X <- G.H.P

##¥Ñ¥é¥á¡¼¥¿¸õÊä¤ÎÀßÄê
N.comp1.vec <- c(1, 2, 3, 4)
N.comp2.vec <- c(0, 2, 4)
N.clust.vec <- c(2, 3, 4, 5)
by.rho1 <- 0.25
by.rho2 <- 0.25
rho1.vec <- seq(1, 2, by=by.rho1)
rho2.vec <- seq(-3, 1, by=by.rho2)
par.mat <- expand.grid(N.comp1=N.comp1.vec, N.comp2=N.comp2.vec, N.clust=N.clust.vec)
par.mat <- subset(par.mat, N.comp1 < N.clust)
N.par.mat <- dim(par.mat)[1]
rownames(par.mat) <- c(1:N.par.mat)
rho.set.temp <- expand.grid(rho1=rho1.vec, rho2=rho2.vec)
rho.set <- subset(rho.set.temp, rho1 > rho2)
N.rho.set <- dim(rho.set)[1]
rownames(rho.set) <- c(1:dim(rho.set)[1])
par.mat <- expand.grid(N.comp1=N.comp1.vec, N.clust=N.clust.vec)
par.mat <- subset(par.mat, N.comp1 < N.clust)
N.par.mat <- dim(par.mat)[1]
rownames(par.mat) <- c(1:N.par.mat)

str(X)
RankIsFull <- TRUE
RankIsFull2 <- FALSE
N.sub <- 150
NIV <- 0
save.location <- "/home/michio/02_work/2013_Functional GRC/working_directory/141127_revision_CV_test/out/"
load(file=paste(save.location, "ret.cv.list_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
load(file=paste(save.location, "ret.list_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
load(file=paste(save.location, "within.var_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))
load(file=paste(save.location, "X_", RankIsFull, "_", RankIsFull2, "_N.sub=", N.sub, "_NIV=", NIV, sep=""))


##e-value¤òµá¤á¤ë
e.value <- eValue(X, par.mat, within.var)

e.value
par.set
par.mat
cbind(par.mat, e.value)
within.var
e.value
str(ret.cv.list)
length(ret.cv.list)
length(ret.cv.list[[3]])
str(ret.cv.list[[3]])
str(ret.cv.list[[1]])
str(ret.cv.list[[2]])
str(ret.cv.list[[4]])
str(ret.cv.list[[5]])
str(ret.cv.list[[6]])
str(ret.cv.list[[7]])
str(ret.cv.list[[8]])
ret.cv.list[[3]]
ret.cv.list[[3]]$a
ret.cv.list[[3]]$b
ret.cv.list[[3]]$v
ret.cv.list[[3]]$mean.theta
RankIsFull <- FALSE; RankIsFull2 <- TRUE; N.sub <- 50; NIV <- 1
set.seed(1)
dat <- SimData(RankIsFull, RankIsFull2, 0.0001, N.sub, NIV)
X <- dat$X; A.t <- dat$A; V <- dat$V; U.t <- dat$U; cluster.t <- dat$cluster
temp <- BasisExpand(X, "Bsp", c(8, 4), 0)
X <- temp$X.smooth
coef.arr <- temp$coef.arr
Phi <- temp$Phi
S <- temp$S
N.basis <- temp$N.basis
N.var <- 1 + NIV
K <- temp$K
H.mat <- temp$H.mat
Hat <- temp$Hat
temp2 <- eigen(H.mat, symmetric=TRUE)
H.half <- temp2$vectors %*% sqrt(diag(temp2$values)) %*% t(temp2$vectors)
H.half.inv <- solve(H.half)
N.var.basis <- N.var * N.basis
G.H.P <- NULL
for (n.var in 1:N.var)
  G.H.P <- cbind(G.H.P, coef.arr[,, n.var] %*% H.half)
X <- G.H.P

str(X)
RankIsFull <- FALSE; RankIsFull2 <- TRUE; N.sub <- 50; NIV <- 0
set.seed(1)
dat <- SimData(RankIsFull, RankIsFull2, 0.0001, N.sub, NIV)
X <- dat$X; A.t <- dat$A; V <- dat$V; U.t <- dat$U; cluster.t <- dat$cluster
temp <- BasisExpand(X, "Bsp", c(8, 4), 0)
X <- temp$X.smooth
coef.arr <- temp$coef.arr
Phi <- temp$Phi
S <- temp$S
N.basis <- temp$N.basis
N.var <- 1 + NIV
K <- temp$K
H.mat <- temp$H.mat
Hat <- temp$Hat
temp2 <- eigen(H.mat, symmetric=TRUE)
H.half <- temp2$vectors %*% sqrt(diag(temp2$values)) %*% t(temp2$vectors)
H.half.inv <- solve(H.half)
N.var.basis <- N.var * N.basis
G.H.P <- NULL
for (n.var in 1:N.var)
  G.H.P <- cbind(G.H.P, coef.arr[,, n.var] %*% H.half)
X <- G.H.P

N.comp1 <- 2; N.comp2 <- 0; N.clust <- 5; nstart <- 100; rho1 <- 1; rho2 <- 0; N.random <- 1; show.random.ite <- FALSE; mc.cores <- 7; maxit <- 100; eps <- 1e-05; A.first <- NULL

dyn.load("OptimGRC_C.so")
OptimGRC_C <- function (X, U, A, info) {
  .Call("OptimGRC_C",
        as.double(X),
        as.double(U),
        as.double(A),
        as.double(info), ##rho1, rho2¤â¤¤¤ì¤Æ¤·¤Þ¤ª¤¦
        package = "grc")
}

